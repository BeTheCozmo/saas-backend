name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Deploy só na main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t $DOCKER_USERNAME/meu-projeto:latest --push .

      - name: Deploy to Swarm
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER << 'EOF'
            # Garante que o Swarm está ativo (se não estiver, o pipeline falha)
            docker info --format '{{.Swarm.LocalNodeState}}' | grep -q "active" || exit 1
            # Cria ou atualiza o serviço
            docker service ls | grep -q meu-projeto || \
              docker service create --name meu-projeto -p 8080:8080 $DOCKER_USERNAME/meu-projeto:latest
            docker service update --image $DOCKER_USERNAME/meu-projeto:latest meu-projeto
          EOF
          rm private_key.pem