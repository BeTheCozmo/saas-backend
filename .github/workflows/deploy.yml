name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t bethecozmo/saas-backend:latest --push .

      - name: Deploy to Swarm
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENTERPRISES_DB_URL: ${{ secrets.ENTERPRISES_DB_URL }}
          ULLER_DB_URL: ${{ secrets.ULLER_DB_URL }}
          ULLER_DB_NAME: ${{ secrets.ULLER_DB_NAME }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "Deploying to Swarm ðŸš€ðŸš€ðŸš€!"
            
            docker info --format '{{.Swarm.LocalNodeState}}' | grep -q "active" || exit 1

            docker service ls | grep -q saas-backend
            if [ $? -eq 0 ]; then
              docker service update \
                --env-add JWT_SECRET="${{ secrets.JWT_SECRET }}" \
                --env-add ENTERPRISES_DB_URL="${{ secrets.ENTERPRISES_DB_URL }}" \
                --env-add ULLER_DB_URL="${{ secrets.ULLER_DB_URL }}" \
                --env-add ULLER_DB_NAME="${{ secrets.ULLER_DB_NAME }}" \
                --image bethecozmo/saas-backend:latest saas-backend
            else
              docker service create --name saas-backend \
                -p 8080:8080 \
                -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
                -e ENTERPRISES_DB_URL="${{ secrets.ENTERPRISES_DB_URL }}" \
                -e ULLER_DB_URL="${{ secrets.ULLER_DB_URL }}" \
                -e ULLER_DB_NAME="${{ secrets.ULLER_DB_NAME }}" \
                bethecozmo/saas-backend:latest
            fi